{
  "name": "@cpn-console/root",
  "type": "module",
  "version": "9.1.0",
  "private": true,
  "packageManager": "pnpm@9.15.4",
  "scripts": {
    "build": "turbo run build --color --no-daemon",
    "build:clean": "turbo run build:clean --no-daemon",
    "dev": "docker compose -f ./docker/docker-compose.local.yml up -d --remove-orphans && echo '\nStart server and client with commands:\n\n  pnpm --filter @cpn-console/server run dev\n  pnpm --filter @cpn-console/client run dev\n\nMake sure you provide env variables in `.env` files.'",
    "dev:clean": "docker compose -f ./docker/docker-compose.local.yml down --remove-orphans",
    "dev:delete": "docker compose -f ./docker/docker-compose.local.yml down -v --remove-orphans",
    "docker:dev": "docker compose -f ./docker/docker-compose.dev.yml up -d --remove-orphans; docker compose -f ./docker/docker-compose.dev.yml watch --no-up & docker compose -f ./docker/docker-compose.dev.yml logs server client -f",
    "docker:dev:build": "export COMPOSE_FILE=./docker/docker-compose.dev.yml && ./ci/kind/run-build.sh $COMPOSE_FILE",
    "docker:dev:clean": "docker compose -f ./docker/docker-compose.dev.yml down --remove-orphans",
    "docker:dev:delete": "docker compose -f ./docker/docker-compose.dev.yml down -v --remove-orphans",
    "docker:e2e": "docker compose -f ./docker/docker-compose.dev.yml up ${TAG:+--no-build} -d --remove-orphans; turbo run test:e2e --filter=@cpn-console/client --color --no-daemon; docker compose -f ./docker/docker-compose.dev.yml down --remove-orphans",
    "docker:e2e-ci": "docker compose -f ./docker/docker-compose.prod.yml up ${TAG:+--no-build} -d --remove-orphans; turbo run test:e2e-ci --filter=@cpn-console/client --color --no-daemon",
    "docker:e2e-ci:delete": "docker compose -f ./docker/docker-compose.prod.yml down -v --remove-orphans",
    "docker:integ": "docker compose --env-file apps/server/.env.integ -f ./docker/docker-compose.integ.yml up -d; docker compose --env-file apps/server/.env.integ -f ./docker/docker-compose.integ.yml watch --no-up & docker compose --env-file apps/server/.env.integ -f ./docker/docker-compose.integ.yml logs server client -f",
    "docker:integ:build": "export $(cat apps/server/.env.integ | grep -v '#' | xargs) && export COMPOSE_FILE=./docker/docker-compose.integ.yml && cd $(dirname $COMPOSE_FILE) && docker buildx bake --file $(basename $COMPOSE_FILE) --load && cd - > /dev/null",
    "docker:integ:clean": "docker compose --env-file apps/server/.env.integ -f ./docker/docker-compose.integ.yml down --remove-orphans",
    "docker:integ:delete": "docker compose --env-file apps/server/.env.integ -f ./docker/docker-compose.integ.yml down -v --remove-orphans",
    "docker:prod": "docker compose -f ./docker/docker-compose.prod.yml up --remove-orphans",
    "docker:prod:build": "export COMPOSE_FILE=./docker/docker-compose.prod.yml && ./ci/kind/run-build.sh $COMPOSE_FILE",
    "docker:prod:delete": "docker compose -f ./docker/docker-compose.prod.yml down -v --remove-orphans",
    "format:style": "turbo run format:style --color --no-daemon",
    "fullclean": "sh ./ci/scripts/cleanup.sh",
    "fullsetup": "sh ./ci/scripts/setup.sh",
    "db:generate": "turbo run db:generate --no-daemon",
    "integ": "docker compose -f ./docker/docker-compose.local.yml up -d --remove-orphans postgres pgadmin && echo '\nStart server and client with commands:\n\n  pnpm --filter @cpn-console/server run integ\n  pnpm --filter @cpn-console/client run integ\n\nMake sure you provide env variables in `.env.integ` files.'",
    "integ:clean": "docker compose -f ./docker/docker-compose.local.yml down --remove-orphans",
    "integ:delete": "docker compose -f ./docker/docker-compose.local.yml down -v --remove-orphans",
    "kube:init": "ci/kind/run.sh -i -d console.dso.local,keycloak.dso.local,pgadmin.dso.local",
    "kube:dev:build": "ci/kind/run.sh -c create,build,load -f docker/docker-compose.dev.yml",
    "kube:dev:load": "ci/kind/run.sh -c create,load -f docker/docker-compose.dev.yml",
    "kube:dev:run": "ci/kind/run.sh -c create,dev",
    "kube:dev": "pnpm kube:dev:build; pnpm kube:dev:run",
    "kube:integ:build": "pnpm kube:dev:build",
    "kube:integ:load": "pnpm kube:dev:load",
    "kube:integ:run": "ci/kind/run.sh -c create,dev,integ",
    "kube:integ": "pnpm kube:integ:build; pnpm kube:integ:run",
    "kube:prod:build": "ci/kind/run.sh -c create,build,load -f docker/docker-compose.prod.yml",
    "kube:prod:load": "ci/kind/run.sh -c create,load -f docker/docker-compose.prod.yml",
    "kube:prod:run": "ci/kind/run.sh -c create,prod",
    "kube:prod": "pnpm kube:prod:build; pnpm kube:prod:run",
    "kube:e2e": "pnpm kube:dev; npm --prefix apps/client run kube:e2e",
    "kube:e2e-ci": "turbo run kube:e2e-ci --filter=@cpn-console/client --color --no-daemon",
    "kube:clean": "ci/kind/run.sh -c clean",
    "kube:delete": "ci/kind/run.sh -c delete",
    "kube:load:package": "ci/kind/upload-package.sh",
    "lint": "turbo run lint --color --no-daemon",
    "format": "turbo run format --color --no-daemon",
    "lint:root": "eslint .",
    "format:root": "eslint . --fix",
    "lint:style": "turbo run lint:style --color --no-daemon",
    "lint:ts": "turbo run lint:ts --color --no-daemon",
    "prepare": "husky",
    "test": "turbo run test --concurrency 1 --color --no-daemon",
    "test:cov": "turbo run test:cov --color --no-daemon",
    "test:ct": "pnpm --filter @cpn-console/shared run build && pnpm --filter @cpn-console/test-utils run build && pnpm --filter @cpn-console/client run test:ct",
    "test:ct-ci": "turbo run test:ct-ci --color --no-daemon",
    "test:e2e": "pnpm kube:e2e",
    "test:e2e-ci": "pnpm kube:prod; pnpm kube:e2e-ci"
  },
  "devDependencies": {
    "@antfu/eslint-config": "^2.26.0",
    "@commitlint/cli": "^19.3.0",
    "@commitlint/config-conventional": "^19.2.2",
    "@cpn-console/eslint-config": "workspace:^",
    "husky": "^9.0.11",
    "lint-staged": "^15.2.7",
    "turbo": "^2.0.5"
  },
  "pnpm": {
    "patchedDependencies": {
      "fastify-keycloak-adapter@2.2.0": "patches/fastify-keycloak-adapter@2.2.0.patch",
      "fastify-keycloak-adapter@2.3.2": "patches/fastify-keycloak-adapter@2.3.2.patch",
      "@gouvminint/vue-dsfr": "patches/@gouvminint__vue-dsfr.patch"
    },
    "allowNonAppliedPatches": true
  },
  "volta": {
    "node": "22.14.0"
  }
}
