global:
  env:
    NODE_ENV: "production"
  keycloak:
    domain: keycloak.dso.local
    realm: cloud-pi-native
    protocol: http
    clientIds:
      frontend: console-frontend
      backend: console-backend
    clientSecretBackend: client-secret-backend
    redirectUri: http://console.dso.local
    sessionSecrets:
      backend: a-very-strong-secret-with-more-than-32-char

config:
  create: true
  projectsRootDir: forge-mi/projects
  secrets:
    ARGOCD_URL: "https://argo-cd.readthedocs.io"
    GITLAB_URL: "https://gitlab.com"
    HARBOR_URL: "https://goharbor.io"
    KEYCLOAK_URL: "https://www.keycloak.org"
    NEXUS_URL: "https://sonatype.com/products/nexus-repository"
    SONARQUBE_URL: "https://www.sonarqube.org"
    VAULT_URL: "https://www.vaultproject.io"

ingress:
  enabled: true
  className: "traefik"
  hosts:
    - "console.dso.local"
  tls: []

server:
  image:
    repository: dso-console/server
    tag: prod
    pullPolicy: Never
  initContainers:
    - name: wait-for-keycloak
      image: docker.io/wbitt/network-multitool:alpine-minimal
      command:
        - "/bin/sh"
        - "-c"
      args:
        - "while [ $(curl -sw '%{http_code}' http://$KEYCLOAK_DOMAIN -o /dev/null) -ne 200 ]; do sleep 3; echo 'Waiting for keycloak...'; done"
      env:
        - name: KEYCLOAK_DOMAIN
          value: dso-cpn-keycloak
  dbDataCm: db-data-cm
  env:
    CI: "true"
    DEV_SETUP: "true"
    KEYCLOAK_DOMAIN: dso-cpn-keycloak

client:
  image:
    repository: dso-console/client
    tag: prod
    pullPolicy: Never
  env:
    CI: "true"

postgresql:
  enabled: true
  architecture: "standalone"
  auth:
    postgresPassword: "admin"
    username: "admin"
    password: "admin"
    database: "dso-console-db"
  primary:
    persistence:
      size: "1Gi"

keycloak:
  enabled: true
  auth:
    adminUser: "admin"
    adminPassword: "admin"
  ingress:
    enabled: true
    hostname: "keycloak.dso.local"
    tls: false
  production: false
  tls:
    enabled: false
    autoGenerated: false
  command:
    - /opt/bitnami/keycloak/bin/kc.sh
  args:
    - start-dev
    - --import-realm
  extraVolumes:
    - name: realm-dev
      configMap:
        name: keycloak-realm
  extraVolumeMounts:
    - mountPath: /opt/bitnami/keycloak/data/import/realm-dev.json
      subPath: realm-dev.json
      name: realm-dev
  postgresql:
    enabled: true
    architecture: "standalone"
    auth:
      postgresPassword: "admin"
      username: "admin"
      password: "admin"
      database: "keycloak"
    primary:
      persistence:
        size: "1Gi"
