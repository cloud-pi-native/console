env: production

imageCredentials:
  registry:
  username:
  password:
  email:

#hashmap of custom env applied on all pods, except postgres use postgres.container.env
globalEnv:

config:
  # whether or not helm should create the dso-config configmap
  create: false
  projectsRootDir: forge

ingress:
  enabled: true
  ingressClassName:
  hosts:
    - server-host-to-replace
  tls:
    enabled: true
    secretName:
  annotations: {}
  labels: {}

server:
  extraCa:
    # the configmap in namespace where certificates are stored
    name:
    # the key to lookup
    key:
  dsoConfig:
    name: dso-config
  container:
    #hashmap of custom env
    env:
    image: ghcr.io/cloud-pi-native/console/server:6.3.1 # x-release-please-version
    port: 8080
    imagePullPolicy: Always
    dataConfigmap:
    resources:
      requests:
        memory: "128Mi"
        cpu: "250m"
      limits:
        memory: "512Mi"
        cpu: "500m"
    # extraVolumes:
    #   - name: extra-vol
    #     path: /host/path
    #     type: hostPath
    #   - name: extra-vol-cm
    #     type: configMap
    # extraVolumeMounts:
    #   - name: extra-vol
    #     mountPath: /volume/path
    #   - name: extra-vol-cm
    #     mountPath: /volume/cm/path
    livenessProbe:
      enabled: true
    startupProbe:
      enabled: true
  service:
    hostname: server
    port: 80
    type: ClusterIP
  # list of zips to download; basically curl url, unzip and stores it in plugins/external/<dir_name>
  plugins: []
  # csv list of plugins to disabled
  disabledPlugins: ""

client:
  container:
    image: ghcr.io/cloud-pi-native/console/client:6.3.1 # x-release-please-version
    port: 8080
    imagePullPolicy: Always
    env: #hashmap of custom env
    resources:
      requests:
        memory: "128Mi"
        cpu: "250m"
      limits:
        memory: "512Mi"
        cpu: "500m"
    # extraVolumes:
    #   - name: extra-vol
    #     path: /host/path
    #     type: hostPath
    #   - name: extra-vol-cm
    #     type: configMap
    # extraVolumeMounts:
    #   - name: extra-vol
    #     mountPath: /volume/path
    #   - name: extra-vol-cm
    #     mountPath: /volume/cm/path
  service:
    hostname: client
    port: 80
    type: ClusterIP

postgres:
  container:
    image: docker.io/postgres:15.3
    port: 5432
    imagePullPolicy: Always
    env: #hashmap of custom env
    db: dso-console-db
    user: admin
    pass: admin
    resources:
      requests:
        memory: "128Mi"
        cpu: "250m"
      limits:
        memory: "512Mi"
        cpu: "500m"
  service:
    hostname: postgres
    port: 5432
    type: ClusterIP
    # # unused if not type 'NodePort'
    # nodePort: 30432
  pvc:
    size: 4Gi

keycloak:
  domain:
  realm: yourkeycloakrealm
  admin:
  adminPassword:
  protocol: https
  clientIdFrontend: console-frontend
  clientIdBackend: console-backend
  clientSecretBackend:
  redirectUri:
  sessionSecret:
  container:
  # no deployment of keycloak just infos on how to connect other pods to it
  service:
    hostname:
    port:
