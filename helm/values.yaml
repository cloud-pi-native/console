imagePullPolicy: Always
env: production

imageCredentials:
  registry:
  username:
  password:
  email:

#hashmap of custom env applied on all pods
globalEnv:

server:
  ingress:
    # We strongly discourage expose api server
    enabled: false
    hosts: 
      - server-host-to-replace
    tls:
      enabled: true
      # optional secret used for ingress.spec.tls.secretName
      secretName: 
    annotations: {}
    labels: {}
  extra_ca:
    name: # the configmap in namespace where certificates are stored
    key: # the key to lookup
  dso_config:
    name: dso-config
  container:
    env: #hashmap of custom env
    image: ghcr.io/dnum-mi/dso-console/server:3.2.3 # x-release-please-version
    port: 8080
    node_env: production
    data-configmap:
  service:
    port: 80
    hostname: server
  # list of zips to download; basically curl url, unzip and stores it in plugins/external/<dir_name>
  plugins: []

client:
  container:
    image: ghcr.io/dnum-mi/dso-console/client:3.2.3 # x-release-please-version
    port: 8080
    env: #hashmap of custom env
  service:
    port: 80
    hostname: client
  ingress:
    enabled: true
    hosts:
      - server-host-to-replace
    tls:
      enabled: true
      # optional secret used for ingress.spec.tls.secretName
      secretName: 
    annotations: {}
    labels: {}

postgres:
  container:
    env: #hashmap of custom env
    port: 5432
    db: yourdbname
    user: youruser
    pass: yourpass
  service:
    hostname: postgres
    port: 5432

keycloak:
  domain:
  realm: yourkeycloakrealm
  admin:
  admin_password:
  client_id_frontend: console-frontend
  client_id_backend: console-backend
  client_secret_backend:
  redirect_uri:
  session_secret:

  container:
  # no deployment of keycloak just infos on how to connect other pods to it
  service:
    hostname:
    port:
