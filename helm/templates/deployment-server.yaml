apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Release.Name }}-server
  name: {{ .Release.Name }}-server
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-server
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-server
    spec:
      restartPolicy: Always
      imagePullSecrets:
      - name: {{ .Release.Name }}-pullsecret
      containers:
      - image: {{ .Values.containers.server.container.image }}
        imagePullPolicy: Always
        name: {{ .Release.Name }}-server
        ports:
        - containerPort: {{ .Values.containers.server.container.port }}
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-server-cm
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.containers.server.container.port }}
          initialDelaySeconds: 5
          periodSeconds: 5
        startupProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.containers.server.container.port }}
          failureThreshold: 10
          periodSeconds: 4
{{- if .Values.containers.server.container.data_configmap }}
        volumeMounts:
          - name: imports
            mountPath: /app/src/init/db/imports
      volumes:
        - name: imports
          configMap: 
            name: {{ .Values.containers.server.container.data_configmap }}
{{- end }}