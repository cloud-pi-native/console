services:

  keycloak:
    restart: unless-stopped
    image: docker.io/bitnami/keycloak:23.0.7
    container_name: dso-console_keycloak
    ports:
      - 8090:8080
    volumes:
      - ../keycloak/realms:/opt/bitnami/keycloak/data/import
      - ../keycloak/data/dev:/opt/bitnami/keycloak/data/h2
    user: root
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: true
    entrypoint: /opt/bitnami/keycloak/bin/kc.sh
    command: start-dev --import-realm
    healthcheck:
      test: [CMD, curl, --head, fsS, "http://localhost:8080/health/ready"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - dso-network
    attach: false

  postgres:
    restart: unless-stopped
    image: docker.io/postgres:15.3
    container_name: dso-console_postgres
    environment:
      POSTGRES_DB: dso-console-db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - 5432:5432
    volumes:
      - dso-postgres-data-dev:/var/lib/postgresql/data
    networks:
      - dso-network
    attach: false

  pgadmin:
    restart: unless-stopped
    image: docker.io/dpage/pgadmin4:latest
    container_name: dso-console_pgadmin
    depends_on:
      - postgres
    volumes:
      - ../pgadmin/servers-docker.json:/pgadmin4/servers.json
      - dso-pgadmin-data-dev:/var/lib/pgadmin
    ports:
      - 8081:80
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@dso.fr
      PGADMIN_DEFAULT_PASSWORD: admin
    networks:
      - dso-network
    attach: false

  server:
    restart: unless-stopped
    build:
      context: ..
      dockerfile: apps/server/Dockerfile
      target: dev
    image: dso-console/server:dev
    container_name: dso-console_server
    command: [dev]
    depends_on:
      keycloak:
        condition: service_healthy
      postgres:
        condition: service_started
    ports:
      - 4000:8080
      - 9229:9229
    env_file:
      - ../apps/server/.env.docker
    develop:
      watch:
        - action: sync
          path: ../apps/server
          target: /app/apps/server
          ignore:
            - node_modules/
            - .env
            - .env.docker
            - .env.integ
        - action: sync
          path: ../packages/shared
          target: /app/packages/shared
          ignore:
            - node_modules/
        - action: sync
          path: ../packages/hooks
          target: /app/packages/hooks
          ignore:
            - node_modules/
        - action: sync
          path: ../plugins
          target: /app/plugins
          ignore:
            - node_modules/
        - action: rebuild
          path: ../apps/server/package.json
    networks:
      - dso-network
    attach: true

  client:
    restart: unless-stopped
    build:
      context: ..
      dockerfile: apps/client/Dockerfile
      target: dev
    image: dso-console/client:dev
    container_name: dso-console_client
    depends_on:
      server:
        condition: service_started
    ports:
      - 8080:8080
    env_file:
      - ../apps/client/.env.docker
    develop:
      watch:
        - action: sync
          path: ../apps/client
          target: /app/apps/client
          ignore:
            - node_modules/
            - .env
            - .env.docker
            - .env.integ
        - action: sync
          path: ../packages/shared
          target: /app/packages/shared
          ignore:
            - node_modules/
        - action: rebuild
          path: ../apps/client/package.json
    networks:
      - dso-network
    attach: true

  opencds-mockoon:
    restart: unless-stopped
    build:
      context: ../packages/opencds
      dockerfile: Dockerfile
    image: dso-console/opencds-mockoon:dev
    container_name: dso-opencds_mockoon
    user: root
    ports:
      - 6000:6000
    networks:
      - dso-network

networks:
  dso-network:
    driver: bridge

volumes:
  dso-keycloak-dsfr-theme:
  dso-pgadmin-data-dev:
  dso-postgres-data-dev:
