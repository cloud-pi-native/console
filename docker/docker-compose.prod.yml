services:
  # keycloak-fetch-theme:
  #   restart: no
  #   image: docker.io/curlimages/curl:8.8.0
  #   container_name: dso-console_keycloak-fetch
  #   volumes:
  #     - dso-keycloak-dsfr-theme:/tmp:rw
  #   command: -LfS -o /tmp/keycloak-theme-dsfr.jar https://github.com/codegouvfr/keycloak-theme-dsfr/releases/download/v1.0.3/retrocompat-keycloak-theme.jar
  #   networks:
  #     - dso-network
  #   attach: false

  keycloak:
    restart: unless-stopped
    image: docker.io/bitnami/keycloak:23.0.7
    container_name: dso-console_keycloak
    # depends_on:
    #   keycloak-fetch-theme:
    #     condition: service_completed_successfully
    ports:
      - 8090:8080
    volumes:
      - ../keycloak/realms:/opt/bitnami/keycloak/data/import
      - ../keycloak/data/dev:/opt/bitnami/keycloak/data/h2
    # - type: volume
    #   source: dso-keycloak-dsfr-theme
    #   target: /opt/bitnami/keycloak/providers/keycloak-theme-dsfr.jar
    #   volume:
    #     subpath: keycloak-theme-dsfr.jar
    user: root
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: true
      # DSFR_THEME_HOME_URL: http://localhost:8080
      # DSFR_THEME_SERVICE_TITLE: Console Cloud π Native
      # DSFR_THEME_BRAND_TOP: Ministère<br/>de l'Intérieur</br>et des Outre-Mer
      # DSFR_THEME_TOS_URL:
      # DSFR_THEME_CONTACT_EMAIL: cloudpinative-relations@interieur.gouv.fr
    entrypoint: /opt/bitnami/keycloak/bin/kc.sh
    command: start-dev --import-realm
    healthcheck:
      test: [CMD, curl, --head, fsS, "http://localhost:8080/health/ready"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - dso-network
    attach: false

  postgres:
    restart: unless-stopped
    image: docker.io/postgres:15.3
    container_name: dso-console_postgres
    ports:
      - 8081:80
    environment:
      POSTGRES_DB: dso-console-db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    networks:
      - dso-network
    attach: false

  server:
    restart: unless-stopped
    build:
      context: ..
      dockerfile: apps/server/Dockerfile
      target: prod
    image: dso-console/server:prod
    container_name: dso-console_server
    user: root
    depends_on:
      postgres:
        condition: service_started
      keycloak:
        condition: service_healthy
    ports:
      - 4000:8080
      - 9229:9229
    volumes:
      - ../packages/test-utils/src/imports/data.ts:/app/dist/init/db/imports/data.js
    env_file:
      - ../apps/server/.env.docker
    environment:
      NODE_ENV: production
      CI: "true"
      DEV_SETUP: "true"
    networks:
      - dso-network

  client:
    build:
      context: ..
      dockerfile: apps/client/Dockerfile
      target: prod
    image: dso-console/client:prod
    container_name: dso-console_client
    depends_on:
      server:
        condition: service_started
    ports:
      - 8080:8080
    volumes:
      - ../apps/client/nginx/default.docker.conf:/opt/bitnami/nginx/conf/server_blocks/default.conf
    env_file:
      - ../apps/client/.env.docker
    networks:
      - dso-network

networks:
  dso-network:
    name: dso-network

volumes:
  dso-keycloak-dsfr-theme:
