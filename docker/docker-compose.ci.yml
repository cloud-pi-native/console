version: '3.9'

services:
  keycloak:
    restart: always
    image: quay.io/keycloak/keycloak:19.0.2
    container_name: dso-console_keycloak
    ports:
      - 8090:8080
    volumes:
      - ../keycloak/realms:/opt/keycloak/data/import
    environment:
      CI: "true"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev --import-realm
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - dso-network

  postgres:
    restart: always
    image: docker.io/postgres:14.5
    container_name: dso-console_postgres
    environment:
      CI: "true"
      POSTGRES_DB: dso-console-db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    networks:
      - dso-network

  server:
    restart: always
    build:
      context: ..
      dockerfile: apps/server/Dockerfile
      target: prod
    image: dso-console/server:ci
    container_name: dso-console_server
    depends_on:
      keycloak:
        condition: service_healthy
      postgres:
        condition: service_started
    ports:
      - 4000:4000
    volumes:
      - ../packages/test-utils/src/imports:/app/src/init/db/imports
    env_file:
      - ../apps/server/env/.env.ci
    environment:
      CI: "true"
      DEV_SETUP: "true"
      NODE_ENV: production
    networks:
      - dso-network

  client:
    build:
      context: ..
      dockerfile: apps/client/Dockerfile
      target: prod
    image: dso-console/client:ci
    container_name: dso-console_client
    depends_on:
      server:
        condition: service_started
    ports:
      - 8080:8080
    env_file:
      - ../apps/client/env/.env.ci
    environment:
      CI: "true"
      NODE_ENV: production
    networks:
      - dso-network

  cypress:
    build:
      context: ..
      dockerfile: apps/client/cypress/Dockerfile
    image: dso-console/cypress:ci
    container_name: dso-console_cypress
    command: cypress:run --browser chrome
    depends_on:
      client:
        condition: service_started
    volumes:
      - /app/node_modules/
      - ../apps/client:/app/apps/client
      - /app/apps/client/node_modules/
      - ../packages/shared:/app/packages/shared
      - /app/packages/shared/node_modules/
      - ../packages/test-utils:/app/packages/test-utils
      - /app/packages/test-utils/node_modules/
    environment:
      CI: "true"
      CLIENT_HOST: client
      CLIENT_PORT: 8080
      ARGOCD_URL: https://argo-cd.readthedocs.io
      GITLAB_URL: https://gitlab.com
      QUAY_URL: https://quay.io
      NEXUS_URL: https://sonatype.com/products/nexus-repository
      SONARQUBE_URL: https://www.sonarqube.org
      VAULT_URL: https://www.vaultproject.io
    networks:
      - dso-network

networks:
  dso-network:
    driver: bridge
    # driver_opts:
    # com.docker.network.driver.mtu: 1450
