services:
  keycloak:
    restart: always
    image: docker.io/bitnami/keycloak:23.0.7
    container_name: dso-console_keycloak
    ports:
      - 8090:8080
    volumes:
      - ../keycloak/realms:/opt/bitnami/keycloak/data/import
      - ../keycloak/data/dev:/opt/bitnami/keycloak/data/h2
    user: root
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: true
    entrypoint: /opt/bitnami/keycloak/bin/kc.sh
    command: start-dev --import-realm
    healthcheck:
      test: ["CMD", "curl", "--head","fsS", "http://localhost:8080/health/ready"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - dso-network
    attach: false

  postgres:
    restart: always
    image: docker.io/postgres:15.3
    container_name: dso-console_postgres
    environment:
      POSTGRES_DB: dso-console-db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    networks:
      - dso-network
    attach: false

  server:
    restart: always
    image: ghcr.io/cloud-pi-native/console/server:${TAG:-mandatory_variable}
    container_name: dso-console_server
    user: root
    depends_on:
      postgres:
        condition: service_started
      keycloak:
        condition: service_healthy
    ports:
      - 4000:8080
      - 9229:9229
    volumes:
      - ../packages/test-utils/src/imports/data.ts:/app/dist/init/db/imports/data.js
    env_file:
      - ../apps/server/.env.docker
    environment:
      NODE_ENV: production
      CI: "true"
      DEV_SETUP: "true"
    networks:
      - dso-network

  client:
    image: ghcr.io/cloud-pi-native/console/client:${TAG:-mandatory_variable}
    container_name: dso-console_client
    depends_on:
      server:
        condition: service_started
    ports:
      - 8080:8080
    volumes:
      - ../apps/client/nginx/default.docker.conf:/opt/bitnami/nginx/conf/server_blocks/default.conf
    env_file:
      - ../apps/client/.env.docker
    networks:
      - dso-network

networks:
  dso-network:
    name: dso-network

