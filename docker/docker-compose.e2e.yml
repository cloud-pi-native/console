version: '3.9'

services:
  keycloak:
    restart: always
    image: quay.io/keycloak/keycloak:19.0.2
    container_name: dso-console_keycloak
    ports:
      - 8090:8080
    volumes:
      - ../keycloak/realms:/opt/keycloak/data/import
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev --import-realm
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - dso-network

  postgres:
    restart: always
    image: docker.io/postgres:14.5
    container_name: dso-console_postgres
    environment:
      POSTGRES_DB: dso-console-db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    networks:
      - dso-network

  server:
    restart: always
    build:
      context: ..
      dockerfile: apps/server/Dockerfile
      target: dev
    image: dso-console/server:test
    container_name: dso-console_server
    depends_on:
      keycloak:
        condition: service_healthy
      postgres:
        condition: service_started
    ports:
      - 4000:4000
    volumes:
      - /app/node_modules/
      - ../apps/server:/app/apps/server
      - /app/apps/server/node_modules/
      - ../packages/shared:/app/packages/shared
      - /app/packages/shared/node_modules/
      - ../packages/test-utils/src/imports:/app/apps/server/src/init-db/imports
    env_file:
      - ../apps/server/env/.env
    environment:
      CI: "true"
      DEV_SETUP: "true"
      NODE_ENV: dev
    networks:
      - dso-network

  client:
    build:
      context: ..
      dockerfile: apps/client/Dockerfile
      target: dev
    image: dso-console/client:test
    container_name: dso-console_client
    depends_on:
      server:
        condition: service_started
    ports:
      - 8080:8080
    volumes:
      - /app/node_modules/
      - ../apps/client:/app/apps/client
      - /app/apps/client/node_modules/
      - ../packages/shared:/app/packages/shared
      - /app/packages/shared/node_modules/
    env_file:
      - ../apps/client/env/.env
    environment:
      NODE_ENV: development
    networks:
      - dso-network

networks:
  dso-network:
    driver: bridge
    # driver_opts:
    # com.docker.network.driver.mtu: 1450
