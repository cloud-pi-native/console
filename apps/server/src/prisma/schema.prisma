generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model Environment {
  id        String  @id @db.Uuid
  name      String
  projectId String  @db.Uuid
  status    String  @default("initializing")
  project   Project @relation(fields: [projectId], references: [id])

  permissions Permission[]
}

model Log {
  id     Int    @id @default(autoincrement())
  data   Json
  action String @default("")
  userId String @db.Uuid
  user   User   @relation(fields: [userId], references: [id])
}

model Organization {
  id     String  @id @unique @db.Uuid
  source String
  name   String  @unique
  label  String  @unique
  active Boolean @default(true)

  projects Project[]
}

model Permission {
  id            String      @id @unique @db.Uuid
  userId        String      @db.Uuid
  environmentId String      @db.Uuid
  level         Int         @default(0)
  user          User        @relation(fields: [userId], references: [id])
  environment   Environment @relation(fields: [environmentId], references: [id])
}

model Project {
  id             String       @id @unique @db.Uuid
  name           String
  organizationId String       @db.Uuid
  description    String
  status         String
  locked         Boolean      @default(false)
  services       Json
  organization   Organization @relation(fields: [organizationId], references: [id])

  environments  Environment[]
  repositories  Repository[]
  UsersProjects UsersProjects[]
}

model Repository {
  id               String  @id @db.Uuid
  projectId        String  @db.Uuid
  internalRepoName String
  externalRepoUrl  String
  externalUserName String
  externalToken    String
  isInfra          Boolean @default(false)
  isPrivate        Boolean @default(false)
  status           String  @default("initializing")
  project          Project @relation(fields: [projectId], references: [id])
}

model User {
  id        String @id @db.Uuid
  firstName String
  lastName  String
  email     String @unique

  logs          Log[]
  permissions   Permission[]
  UsersProjects UsersProjects[]
}

model UsersProjects {
  UserId    String  @db.Uuid
  ProjectId String  @db.Uuid
  role      String
  user      User    @relation(fields: [UserId], references: [id])
  project   Project @relation(fields: [ProjectId], references: [id])

  @@id([UserId, ProjectId])
}
