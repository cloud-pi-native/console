model Cluster {
  id               String         @id @unique @default(uuid()) @db.Uuid
  label            String         @unique @db.VarChar(50)
  privacy          ClusterPrivacy @default(dedicated)
  secretName       String         @unique @default(uuid()) @db.VarChar(50)
  clusterResources Boolean        @default(false)
  kubeConfigId     String         @unique @db.Uuid
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  infos            String?        @db.VarChar(1000)
  external         Boolean        @default(false)
  zoneId           String         @db.Uuid
  kubeconfig       Kubeconfig     @relation(fields: [kubeConfigId], references: [id], onDelete: Cascade)
  zone             Zone           @relation(fields: [zoneId], references: [id])
  environments     Environment[]
  projects         Project[]      @relation("ClusterToProject")
  stages           Stage[]        @relation("ClusterToStage")
}

model Kubeconfig {
  id            String   @id @unique @default(uuid()) @db.Uuid
  user          Json
  cluster       Json
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  parentCluster Cluster?
}

model Quota {
  id           String        @id @unique @default(uuid()) @db.Uuid
  memory       String        @db.VarChar
  cpu          Float         @db.Real
  name         String        @unique @db.VarChar
  isPrivate    Boolean       @default(false)
  environments Environment[]
  stages       Stage[]       @relation("QuotaToStage")
}

model Stage {
  id           String        @id @unique @default(uuid()) @db.Uuid
  name         String        @unique @db.VarChar
  environments Environment[]
  clusters     Cluster[]     @relation("ClusterToStage")
  quotas       Quota[]       @relation("QuotaToStage")
}

model Zone {
  id          String    @id @unique @default(uuid()) @db.Uuid
  slug        String    @unique @db.VarChar(10)
  label       String    @db.VarChar(50)
  description String?   @db.VarChar(200)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  argocdUrl   String    @default("https://example.com")
  clusters    Cluster[]
}

enum ClusterPrivacy {
  public
  dedicated
}
