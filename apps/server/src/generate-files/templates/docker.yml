.docker:test:
  image: docker:stable
  services:
    - name: docker:dind
      alias: dindservice
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  variables:
    DOCKER_HOST: tcp://dindservice:2375
    DOCKER_DRIVER: overlay2
    # See https://github.com/docker-library/docker/pull/166
    DOCKER_TLS_CERTDIR: ""
    IMAGE: $IMAGE_NAME:$TAG
    TRIVY_NO_PROGRESS: "true"
    TRIVY_CACHE_DIR: "./trivycache/"
  before_script:
    - export TRIVY_VERSION=$(wget -qO - "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
    - echo $TRIVY_VERSION
    - wget --no-verbose https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz -O - | tar -zxvf -
  allow_failure: true
  script:
    - "cd $WORKING_DIR"
    # Build image
    - docker build -t $IMAGE_NAME:$TAG .
    - ./trivy image --security-checks vuln,config --clear-cache
    - ./trivy image --security-checks vuln,config --exit-code 0 --format template --template "@contrib/html.tpl" -o trivy-${WORKING_DIR}-image.html $IMAGE
    - ./trivy filesystem --security-checks config,vuln --exit-code 0 --format template --template "@contrib/html.tpl" -o trivy-${WORKING_DIR}-fs.html ./$WORKING_DIR
    - ./trivy filesystem --severity CRITICAL --security-checks config,vuln --exit-code 1 --format template --template "@contrib/html.tpl" -o trivy-${WORKING_DIR}-fs-critical.html ./$WORKING_DIR
    - ./trivy image --security-checks vuln,config --severity CRITICAL --exit-code 1 --format template --template "@contrib/html.tpl" -o trivy-${WORKING_DIR}-image-critical.html $IMAGE
    # Combine report
    # - apk update && apk add jq
    # - jq -s 'add' gl-codeclimate-image.json gl-codeclimate-fs.json > gl-codeclimate.json
  cache:
    paths:
      - .trivycache/
  artifacts:
    when: always
    paths:
      - trivy*.html

.docker:build:
  image: docker:stable
  variables:
    DOCKER_HOST: tcp://dindservice:2375
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: docker:stable-dind
      alias: dindservice
  before_script:
    - docker info
  script:
    - "cd $WORKING_DIR"
    - echo $REGISTRY_URL
    - docker login $REGISTRY_URL -u="${QUAY_ROBOT_USERNAME}" -p $QUAY_ROBOT_TOKEN
    - docker build -t $REGISTRY_URL/$IMAGE_NAME:$TAG .
    - docker push $REGISTRY_URL/$IMAGE_NAME:$TAG

.buildah:build:
  image: quay.io/buildah/stable:v1.27
  variables:
    STORAGE_DRIVER: "vfs"
    BUILDAH_FORMAT: "docker"
    BUILDAH_ISOLATION: "rootless"
  script:
    - "cd $WORKING_DIR"
    - buildah login --username "${QUAY_ROBOT_USERNAME}" --password "${QUAY_ROBOT_TOKEN}" "${REGISTRY_URL}"
    - buildah bud -t ${IMAGE_NAME}:${TAG} .
    - buildah push ${IMAGE_NAME}:${TAG} $REGISTRY_URL/$IMAGE_NAME:$TAG

.buildah:test:
  image: quay.io/buildah/stable:v1.27
  before_script:
    - export TRIVY_VERSION=$(curl -L "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
    - echo $TRIVY_VERSION
    - curl -L https://github.com/aquasecurity/trivy/releases/download/v0.32.1/trivy_0.32.1_Linux-64bit.tar.gz | tar -zx
  allow_failure: true
  variables:
      STORAGE_DRIVER: "vfs"
      BUILDAH_FORMAT: "docker"
      BUILDAH_ISOLATION: "rootless"
  script:
    - "cd $WORKING_DIR"
    - buildah login --username "${QUAY_ROBOT_USERNAME}" --password "${QUAY_ROBOT_TOKEN}" "${REGISTRY_URL}"
    - buildah bud -t ${IMAGE_NAME}:${TAG} .
    - buildah push --format docker ${IMAGE_NAME}:${TAG} docker-archive:./test-buildah.tar
    - ./trivy image --security-checks vuln,config --clear-cache 
    - ./trivy image --security-checks vuln,config --exit-code 0 --format template --template "@contrib/html.tpl" -o trivy-${WORKING_DIR}-image.html --input ./test-buildah.tar
    - ./trivy filesystem --security-checks config,vuln --exit-code 0 --format template --template "@contrib/html.tpl" -o trivy-${WORKING_DIR}-fs.html ./$WORKING_DIR
    - ./trivy filesystem --severity CRITICAL --security-checks config,vuln --exit-code 1 --format template --template "@contrib/html.tpl" -o trivy-${WORKING_DIR}-fs-critical.html ./$WORKING_DIR
    - ./trivy image --security-checks vuln,config --severity CRITICAL --exit-code 1 --format template --template "@contrib/html.tpl" -o trivy-${WORKING_DIR}-image-critical.html --input ./test-buildah.tar

.kaniko:build:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$REGISTRY_URL\":{\"username\":\"${QUAY_ROBOT_USERNAME}\",\"password\":\"$QUAY_ROBOT_TOKEN\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context="$CI_PROJECT_DIR/$WORKING_DIR" 
    --dockerfile="$CI_PROJECT_DIR/$WORKING_DIR/$DOCKERFILE" 
    --destination $REGISTRY_URL/$IMAGE_NAME:$TAG
