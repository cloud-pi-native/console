include:
  {{#isJava}}
  - local: "/includes/java.yml"
  {{/isJava}}
  {{#isNode}}
  - local: "/includes/node.yml"
  {{/isNode}}
  {{#isPython}}
  - local: "/includes/python.yml"
  {{/isPython}}
  - local: "/includes/docker.yml"
  - local: "/includes/vault.yml"
  - local: "/includes/rules.yml"

default:
  image: alpine:latest
#  tags:
#    - ADD_CUSTOM_TAG_HERE

cache:
  paths:
    - .m2/repository/
    - node_modules

variables:
  TAG: "${CI_COMMIT_REF_SLUG}"
  DOCKERFILE: Dockerfile
  REGISTRY_URL: "${REGISTRY_HOST}/${PROJECT_PATH}"

stages:
  - read-secret
  - quality-app
  - package-app
  - docker-build

read_secret:
  stage: read-secret
  extends:
    - .vault:read_secret

{{#isJava}}
quality-app:
  variables:
    BUILD_IMAGE_NAME: maven:3.8-openjdk-{{javaVersion}}
    WORKING_DIR: "{{workingDir}}"
    MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
    MAVEN_CLI_OPTS: ""
    MVN_CONFIG_FILE: $MVN_CONFIG
  stage: quality-app
  extends:
    - .java:sonar

package-app:
  variables:
    BUILD_IMAGE_NAME: maven:3.8-openjdk-{{javaVersion}}
    WORKING_DIR: "{{workingDir}}"
    ARTEFACT_DIR: "{{artefactDir}}"
    MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
    MAVEN_CLI_OPTS: ""
    MVN_CONFIG_FILE: $MVN_CONFIG
  stage: build-app
  extends:
    - .java:build
{{/isJava}}

{{#isNode}}
quality-app:
  variables:
    WORKING_DIR: "{{workingDir}}"
  stage: test
  extends:
    - .node:sonar

package-app:
  variables:
    BUILD_IMAGE_NAME: node:{{nodeVersion}}
    NODE_INSTALL_COMMAND: {{nodeInstallCommand}}
    NODE_BUILD_COMMAND: {{nodeBuildCommand}}
    WORKING_DIR: "{{workingDir}}"
  stage: build-app
  extends:
    - .node:build
{{/isNode}}

docker-build:
  variables:
    WORKING_DIR: "{{workingDir}}"
    IMAGE_NAME: {{projectName}}
  stage: docker-build
  extends:
    - .kaniko:build