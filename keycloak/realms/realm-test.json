{
  "id": "340622c5-bce4-4fec-8c08-503f5aa5fd23",
  "realm": "TEST",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "900d9d4f-b0f1-4a36-8510-28454cec8bbe",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "340622c5-bce4-4fec-8c08-503f5aa5fd23",
        "attributes": {}
      },
      {
        "id": "dfa0ec08-9680-4c7d-ab35-a12468894001",
        "name": "default-roles-test",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "340622c5-bce4-4fec-8c08-503f5aa5fd23",
        "attributes": {}
      },
      {
        "id": "bfeda140-395f-4cc0-8bc1-c2c647a767e6",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "340622c5-bce4-4fec-8c08-503f5aa5fd23",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "b91425f0-5070-4db5-a171-59d6579a8bae",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "97ee915f-ed3b-4579-8fa9-80a272d86188",
          "attributes": {}
        },
        {
          "id": "50bbc44c-c332-43ee-b7f3-555a2b198051",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "97ee915f-ed3b-4579-8fa9-80a272d86188",
          "attributes": {}
        },
        {
          "id": "5dcb17b2-6d27-4d6f-ba59-2facdb10178d",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "97ee915f-ed3b-4579-8fa9-80a272d86188",
          "attributes": {}
        },
        {
          "id": "083bd511-a58d-4874-8488-a190282f5423",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "97ee915f-ed3b-4579-8fa9-80a272d86188",
          "attributes": {}
        },
        {
          "id": "51c57886-e07e-4789-bffd-0dd0c202166e",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "97ee915f-ed3b-4579-8fa9-80a272d86188",
          "attributes": {}
        },
        {
          "id": "fb61da10-e4ad-4426-848a-b99e7e42adc3",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "97ee915f-ed3b-4579-8fa9-80a272d86188",
          "attributes": {}
        },
        {
          "id": "3bd90b0e-db87-4e66-a107-17eeb02ce15a",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "97ee915f-ed3b-4579-8fa9-80a272d86188",
          "attributes": {}
        },
        {
          "id": "1d4e2f8d-66eb-4d5d-b5f4-189b5eb181e6",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "97ee915f-ed3b-4579-8fa9-80a272d86188",
          "attributes": {}
        },
        {
          "id": "364c5861-a7bd-41a5-b6c3-89417f0dcea2",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "97ee915f-ed3b-4579-8fa9-80a272d86188",
          "attributes": {}
        },
        {
          "id": "8241cea3-ee23-46ee-88e3-668e8312ab7a",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "97ee915f-ed3b-4579-8fa9-80a272d86188",
          "attributes": {}
        },
        {
          "id": "8d1d81e1-fd40-4dbe-a27b-0c16caf7f463",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "97ee915f-ed3b-4579-8fa9-80a272d86188",
          "attributes": {}
        },
        {
          "id": "2591b7f3-3ef8-4ab3-9eb4-92d7a3942136",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "97ee915f-ed3b-4579-8fa9-80a272d86188",
          "attributes": {}
        },
        {
          "id": "5db5b3d6-f5d0-4048-b299-b300c87c375f",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "97ee915f-ed3b-4579-8fa9-80a272d86188",
          "attributes": {}
        },
        {
          "id": "ec01de64-4328-4fc6-8a40-0e69f882011b",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "97ee915f-ed3b-4579-8fa9-80a272d86188",
          "attributes": {}
        },
        {
          "id": "17c61d27-39a9-4d3e-af86-261357e7da89",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "97ee915f-ed3b-4579-8fa9-80a272d86188",
          "attributes": {}
        },
        {
          "id": "80bba02a-9900-4447-b1bf-a3838652732b",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "97ee915f-ed3b-4579-8fa9-80a272d86188",
          "attributes": {}
        },
        {
          "id": "466d6717-d799-4099-9fab-9af5dd0116ab",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "97ee915f-ed3b-4579-8fa9-80a272d86188",
          "attributes": {}
        },
        {
          "id": "d5b9a874-a595-4d53-abd8-8070b7b38233",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "97ee915f-ed3b-4579-8fa9-80a272d86188",
          "attributes": {}
        },
        {
          "id": "254a9e67-2212-4808-b737-3b97bdde534d",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-clients",
                "query-clients",
                "manage-events",
                "create-client",
                "query-groups",
                "manage-users",
                "query-realms",
                "manage-realm",
                "view-realm",
                "view-users",
                "manage-identity-providers",
                "view-authorization",
                "view-identity-providers",
                "manage-clients",
                "view-events",
                "manage-authorization",
                "query-users",
                "impersonation"
              ]
            }
          },
          "clientRole": true,
          "containerId": "97ee915f-ed3b-4579-8fa9-80a272d86188",
          "attributes": {}
        }
      ],
      "TEST": [],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "4cf8f606-715a-420a-bc13-a9b82e41050c",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "2b1896e1-d013-4056-8121-deaeba80f4a0",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "540b7b20-d408-47c0-bc43-31c61b1f032b",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "f21579e2-39c3-42d3-9cc8-9c9d84c66038",
          "attributes": {}
        },
        {
          "id": "408bdbed-f728-4d91-a902-1ed4d338e95b",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "f21579e2-39c3-42d3-9cc8-9c9d84c66038",
          "attributes": {}
        },
        {
          "id": "b9564d78-94e2-4d8a-8621-2ea10c84a4b9",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "f21579e2-39c3-42d3-9cc8-9c9d84c66038",
          "attributes": {}
        },
        {
          "id": "01131f6e-7542-4008-a12b-ee57b156d240",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "f21579e2-39c3-42d3-9cc8-9c9d84c66038",
          "attributes": {}
        },
        {
          "id": "605e2c6a-ee56-4a66-9112-314cb44d1665",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "f21579e2-39c3-42d3-9cc8-9c9d84c66038",
          "attributes": {}
        },
        {
          "id": "6c8c5687-afe0-43d8-bfe8-6a8484175cdd",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "f21579e2-39c3-42d3-9cc8-9c9d84c66038",
          "attributes": {}
        },
        {
          "id": "6ea483b4-dda5-4486-9e3e-81044074d54c",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "f21579e2-39c3-42d3-9cc8-9c9d84c66038",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [
    {
      "id": "4e75310d-0cc5-40c4-89f2-2556ac3e1a9e",
      "name": "test",
      "path": "/test",
      "attributes": {},
      "realmRoles": [],
      "clientRoles": {},
      "subGroups": []
    }
  ],
  "defaultRole": {
    "id": "dfa0ec08-9680-4c7d-ab35-a12468894001",
    "name": "default-roles-test",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "340622c5-bce4-4fec-8c08-503f5aa5fd23"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "70eec74f-5bab-4952-900c-98457952ca2a",
      "createdTimestamp": 1663259469450,
      "username": "test",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "test",
      "lastName": "admin",
      "email": "test@test.com",
      "credentials": [
        {
          "id": "c04ac949-20b7-4711-bdbc-8c6514e0dfb3",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1663259500591,
          "secretData": "{\"value\":\"3QWWDSePGPdErw1sxDW79h6MdRGqlioQ9MrUJ+CKnqljmv5IkkwxzsIJK1l4Ze05724UZIWdiZkTCDGWcUBIoQ==\",\"salt\":\"dotbvaLxHdSSerytYz7Mmg==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [
        "UPDATE_PASSWORD"
      ],
      "realmRoles": [
        "default-roles-test"
      ],
      "notBefore": 0,
      "groups": [
        "/test"
      ]
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "e7d105eb-28d4-4557-a274-eb354a60a33b",
      "clientId": "TEST",
      "name": "TEST",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "http://localhost:8090/realms/TEST/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "http://localhost:8080",
        "http://localhost:8080/*",
        "/"
      ],
      "webOrigins": [
        "http://localhost:8080"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "f21579e2-39c3-42d3-9cc8-9c9d84c66038",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/TEST/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/TEST/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "a1160bb3-a923-436c-b9aa-c36cad33ec66",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/TEST/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/TEST/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "3a97540e-9c73-496b-97c0-a00224b04210",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "3b9dd0ca-621f-4905-9b99-47747bc4ae07",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "2b1896e1-d013-4056-8121-deaeba80f4a0",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "97ee915f-ed3b-4579-8fa9-80a272d86188",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "6cf5c875-a4bb-43a0-9c18-fd8d455065fd",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/TEST/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/TEST/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "ae6a66ca-d13b-4e09-847a-51cd40a8e3bf",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "bb531633-f319-4a98-b373-1f597228b1f8",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "8b1c5869-96da-42de-83ad-67afeaf5f1d5",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "f3bb9580-fe06-4c1a-916c-69b74f8b9a5e",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "2775aadc-2839-4acf-90a5-bb2ed82ec42d",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "16d309f4-d823-4c7f-8ce6-582adbd661e8",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "6aa1533c-b28a-4623-95db-354b5207b3e7",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "7a1d63c7-f658-499f-b5cf-945600c36862",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "e7ebef9d-8c2f-4dcd-8483-f5355f7a096b",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "a114a0b9-cfbe-4a64-a388-71f9e26d8b6b",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "a5ce086f-5b14-4ca5-bedf-76956c817641",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "f264b7fd-98e4-432d-89c9-02a9971b8a3d",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "d31fd52c-10e1-45f0-8497-10ec354e5b9c",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "0c8986f7-447c-4139-9746-de278e070a17",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5068e2ef-9f13-4e3b-a7cb-39bfeb761202",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "b7654bb5-3de6-490e-a71d-4d47c3827020",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "c650f4cf-d1d2-4f93-9edd-175df3160f03",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "80ddf45c-858f-4723-98b1-06bef3fca65e",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "387edfc0-3b27-4424-8de9-4152d57f62b0",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "206d15ff-bb09-46ba-9cf8-e08e7d302ca8",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "afac18e6-2b92-4335-ba54-fb79a1da2adb",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "fad11a34-75f9-45f3-a164-fd61cd4e249e",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "83953919-dd13-435b-bd91-3acb75917ba9",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "ee6d0f7d-046c-482e-93f0-00fd9945d696",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "c7b874c7-b157-43bd-b845-8724209084cc",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4017aeb1-b120-45ca-888b-193a311f3d57",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2bdc84ff-c0e9-4ed0-9196-7ca22c858133",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d71c6a5b-2eb0-4c33-867e-a8e6b8930f93",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c67a56ea-80c4-4b17-a9d0-426feaf23709",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "3d8dbd73-d0fa-46e6-8402-43b46d883b84",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d722e293-7fd4-454b-917c-42f2a447beca",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "ad06bbc2-a521-4788-bd71-8d2137dedcc9",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a42a73c8-772e-4f6a-b723-feb15844559e",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e37bce3c-5c20-4652-a5e4-d59bb1741c53",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "94bbcb10-d262-48d1-80f5-302d81e06ae0",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4ea19ba2-19c2-46df-8445-2ecead1b4af4",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "cc0eb44e-5c07-46a4-ae73-0aba0c368323",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "01f70647-122c-43a5-aaee-b77be7c8f006",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "roles",
    "email",
    "acr",
    "web-origins",
    "role_list",
    "profile"
  ],
  "defaultOptionalClientScopes": [
    "microprofile-jwt",
    "offline_access",
    "phone",
    "address"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "47d80fcb-679b-43e0-bce4-9251922ef65d",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "c199ba7f-ce85-47fe-94e7-24465be396e0",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "9cff78f0-5cc0-4829-b964-1b6e8f892622",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "6d22b26b-6d6c-4255-b954-d4b0f03b5cbf",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-property-mapper",
            "saml-role-list-mapper",
            "oidc-address-mapper"
          ]
        }
      },
      {
        "id": "14436517-54e5-43d1-bedb-be7097892484",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "22c2b269-6ab7-456f-8ad8-9e383c1fb9e5",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "ff54752a-600f-41b7-812c-6f4186ddcd61",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-role-list-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper",
            "saml-user-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper"
          ]
        }
      },
      {
        "id": "3a3a9228-ce94-40cd-8795-00d4088a4124",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "5ee239a5-0459-4b6d-aaec-72a25baa53cb",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAot8UOtzKZMn6pCOVjfiIse10lsfu24kdlGJqfVON8EdGn7ucKwdKwYBkpfc0VVSznmHaXkR9srHKKDcUTt8KLvwzYPgi723e2RSvcTTkAI+ZnNskYU8NIl/qLqrUlfHXKNkCzxsq/qAeJRfgs79T6e2FTXFsgPX7SvpQC/HTrqGHw3pzzdUwaBoHITmpwIyo7vBf+7ErcGeqPqbc2t6zUR3Xletu4BgQsK2DJ67coVkaijHBIvXiR4O/hX1999Hhlbqk5a9cuOkNvNWLOp4elczs94KkxKAtvTNchnDE+TCS9L0ykJrawfmF3bqYhQv+313HKcSSf/vrt28hmL8kZwIDAQABAoIBABANk8VfeLVpcQJXnYiCPBrpcCniZ+kMgTVcY+mZYC6UH+Jjj/dvvw8GdCUlkettL00HkQnkj00bF/VRxHcnpa3O3tOKcYsO1b2ou8gZMfXaMYZT1SigLYe7U24pGU30KcRVa2D1aQ3ywzXdviCJVaCDcDWbXdnyJMQVmukqezZFfkYGJy1P+FgEf8FQL6wmnsWia7V3yvvH/Z1KnBvTHgUi06OueTFybodoPHL510h081PTNH8SiFHdqmLhPv8Sq91xSaXJjIdPhTURNKgl3wn6DsxT0rfjTDVU21VFwr+pPfIod410ig3DnMk57e55d3R+Mvf0ThIQKsvuYpeeVoECgYEAzxcVIuwMJ1mj2VlnvjhUV4OEFvVjnTkRGKQ+jRPdyNCSfsQJWxVFiOhX/M4qKntYZXSfE/nOYW8lgqBbqaCXTf6tju7g0H3a/EQF8Ci6ty5tjM834CaoKGE6cda9gkNGdNKHzl0XTrYz4km3TPb4cEFDjE6fUU4zOC25Hhq+rIECgYEAyVZ6O8J9h/ULUkTR+uVSndvZnXbMCqLwV+NwhPIYDBRvfq/+YROzKbk0QoMKbBuSBmW058PLpEKPukmXxyF7VkF18oK88Fh1qhbsqqaf2DOCxoe9ZoX9uVxTkUCrMdm41OYC/dYE9qmjQbHTuyQ0ahlFbgi7FKx0O3NP3MWjfOcCgYEAjwRV6IQz8IkLivMfnlKwjK+a7XASl2Xt1KK5QBzUMfc49KrV+z05hE9RVJncrPH6HjboFZeTW96yfP/Zzc/GLmsP2YJHaDVCoq0nnK/EIvXBWllRMVABGcHr5upyfh+P7OXoPDA2BHn4YvKd0F1PPdcUmzVA+ZmT7dxF1/CIdgECgYAc7iEoPx0ckRhsXNkzTQpfBn0xhCVzjdAtQNAlOkg8TB9tO8q4lkUTRLp+qCeyOw/zfV/OQbMcSjgu025MvcHkNgnFrAWMH5ngs+ST7NdhEJ3E+zI67hv0K5ESeRFgW2GUrexWHw+dheiggvXimSQy7qisU/LV2KXm+P3LwlZolwKBgQCB6fLlN72TCw/3NUzjNaQL/CtEOVgYmCforYbANjUrQs5DmNyNA1v9tW0/phSx9ruXlWkX+HP3+HFjwaCXs6weLx/dv01zTF8+pdx8K4xNxyJCcPaADZB8JSP9ghbsa3ZZW18pu4ztblXpX5/zTUnub+v8IqXj0dDJTr8yYxa+JQ=="
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIIClzCCAX8CBgGDQf0nwjANBgkqhkiG9w0BAQsFADAPMQ0wCwYDVQQDDARURVNUMB4XDTIyMDkxNTE2MjkxM1oXDTMyMDkxNTE2MzA1M1owDzENMAsGA1UEAwwEVEVTVDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKLfFDrcymTJ+qQjlY34iLHtdJbH7tuJHZRian1TjfBHRp+7nCsHSsGAZKX3NFVUs55h2l5EfbKxyig3FE7fCi78M2D4Iu9t3tkUr3E05ACPmZzbJGFPDSJf6i6q1JXx1yjZAs8bKv6gHiUX4LO/U+nthU1xbID1+0r6UAvx066hh8N6c83VMGgaByE5qcCMqO7wX/uxK3Bnqj6m3Nres1Ed15XrbuAYELCtgyeu3KFZGooxwSL14keDv4V9fffR4ZW6pOWvXLjpDbzVizqeHpXM7PeCpMSgLb0zXIZwxPkwkvS9MpCa2sH5hd26mIUL/t9dxynEkn/767dvIZi/JGcCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAcz+K4lAo3a7n03UacZePUh4ZHKFzGiCBM4ICmqWrb0v0Dds0C8CDznTaq99mUV+ecSrI0Fsa1mFKC1Z5Csc7sA1Cyq1NUibaHgJhv5M+cdo8/f2gHdZIAYIrldUjM4J9vyfBOG13h9ZO3usaORlyfObAyK4ng+qAW4ybNpG7G405HNPxfzNlAvv7bQooRSeBL30N50Xqv92rCuDEuUTmjGRNWCjFw1XHmoKJtXXvFpI/xlZVWPtCoNpNEvU3h+yXnBWEhEp3DvVGSGMHgmuRp6jB2/1Oawy5B6GJEgbsZQV3XZXTOaQh7uRt8qRiXR/Jmdff3nhV06AzZEZqJs2hYw=="
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "8825ba2f-3470-4b44-a2ab-5a73f9807f57",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEogIBAAKCAQEAoRXGKcuWSuZRxPdh291EED4ydOe7jLeEDJnPunGIGUIdoW/M7EVyog56UXn0/DjS+144yfY4s+9vuK48WhICqSSB+QFj4S22wptkvb+5sXytwJvfxfRrFH0e0e3xeQ8oCk7jXOAVI6uYREFEtS75klHxLGOfje6ZYIRJaKRzRYab7myUiFwx7J56DwYNf1mVoFvnZb4IJ0WGW4ozQwJapWKV1QcABWaBcaYCJPS2Dt9LcK4Q1TR/hBGiwo9MC0y0pCBhyBWJd4cNXfXm8JlblcuQ3ZzKIu8AMaTNrRfXBcIUdROdnS9CjMEvtzJJjQe3peC8biNmj+ixBCQ4GMu1xQIDAQABAoIBAA6fmOlDa6XqCcNNR+t7R0oIM3Fsdhi8sjaoofSFiPruBx2YNiy+0zzF/rG11hktmW2rbJFdEmG3W1eTLbRpjSdIwqnVx/jxuvUowTj+lj94F5f0Lpjcavolr64UIUdBqnthFP/h8dlWoxCTMkcWeB6h5LiIZLwwTGk4KSfgQfyuKha9VVGCCIUsOXd45P06WZgE6BgvWhpxrVi/JkAbMhKzHezqqiNvkFRgxnEsjjlkYMGOW7w8m8gRSFL3a0IPPaqQYcubj470h46TVM+g3uq1nN986r9SRWtGPsRkV3VbBQbGIleqwMApJMq+TrMaZC9at/yL6430RN28abv94sMCgYEA4ctvI8Hx5NDA8T0VgaQgaokEmcIHuay9m6X4LiJHBDlspr8GI9TrbCMGWJupDI3Cf63oyFL3xdqeyXYsF/XC/H0gEfpwAPZNJXnCZQL9giwe10gOk4Q2DjYePU9yb6EldtvUO1ff6WOPQYseu7FdofmtKtr8YR8GJhl8BPESJssCgYEAtqJLTHcvHST0l4cITMVUHK6hX10KIsUnAN9UfSrTCevFBrqVsce36iFU0kPpY3+qp9WnxkGi2na8hNJ0cscuuaUuYVEFElNPhvxo48GElxoXdFMxTdLk44tdKxzylR/JwggKN3y0mUGNzIdLEFNH1mNhGZlaQ6UAHHYfeh0ic68CgYAEDv4ObHwGmuH89BYg4Gxcvd3BTcWJxtsZoyAU5DTWlJmpXaGknz0kEnUYvqOJQDsQxHV8tFET01wrTt54B8jbdPxQlmnQ+pxkYg3mdulLn7NmNztb13KJStu8SmNKMmFUA5uK/Yde0JVQnkmNIiEGulAshwcmT8JyiN670AF9hQKBgE5bd18JS6d/cYmJn+AAUcQ0kHvv2Sdt2vwe1YsWUpFRHKl0aEFsZNYJEvFbvci4v6lem6sOAiclBmEeQmP0XXG9ExchwcFJCTfrF72QC6kgwqtf/ilbsGSIKKMUumeMye17sZZ45KtUWthDu8r3UD0FSmXHS9j19ARCEeM8mMl1AoGANVFl38OYNL3ojj7asrUQ4MPG7itkwm2Yl/VilGW5fXR4KolGG/LRoVYYsgTPH0002IIwHHrXyRS/5HtsHvyl/FPPNYF/pV65I6NmLxCYZU4fKMxWJfUvvJG6rCZSOp5ZaFdSMJ/w5kLB6LVnQFtcRiLQprK6/AgfkOgWTljuwwU="
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIIClzCCAX8CBgGDQf0nHzANBgkqhkiG9w0BAQsFADAPMQ0wCwYDVQQDDARURVNUMB4XDTIyMDkxNTE2MjkxM1oXDTMyMDkxNTE2MzA1M1owDzENMAsGA1UEAwwEVEVTVDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKEVxinLlkrmUcT3YdvdRBA+MnTnu4y3hAyZz7pxiBlCHaFvzOxFcqIOelF59Pw40vteOMn2OLPvb7iuPFoSAqkkgfkBY+EttsKbZL2/ubF8rcCb38X0axR9HtHt8XkPKApO41zgFSOrmERBRLUu+ZJR8Sxjn43umWCESWikc0WGm+5slIhcMeyeeg8GDX9ZlaBb52W+CCdFhluKM0MCWqVildUHAAVmgXGmAiT0tg7fS3CuENU0f4QRosKPTAtMtKQgYcgViXeHDV315vCZW5XLkN2cyiLvADGkza0X1wXCFHUTnZ0vQozBL7cySY0Ht6XgvG4jZo/osQQkOBjLtcUCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAH330Q8lzEuK67r5FQBpIpER3aJEconyBsQzJnRxdW6ZVtkfeidjN6Q9bW3oGyZ/xDpeBn5/ZOQ3HcesDN95Iaz+EAao/3VE8JaCB2Eqamvub/EcveHElxo+CBVrGQY64y1meJpfHFgxEcF/hkUJe8wMzSyWPb1snqFUndWG5Wad3F+qa8ikEQqycctHt+8dNqqP8VaGdxkVsEC+YG+UFsRV3xrO+TJZ998zMzYRQqjQzfpr8xvKdfCu7NeF0/1q6M5luREovXQI6euUQm8mNwak8sadEfiA03FfG9qLtcRHbdKxr/+bj5somsY5UzC+DR1eUP8nt96m3gnAHFbExmg=="
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "398f2749-4c4b-4636-8631-8a1f30afb814",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "dfce7322-ca85-4d41-94e8-d73413d7d924"
          ],
          "secret": [
            "RM8NJDWvbh_3lV-puCv9Wx8-ApgnYZhtmycmlwDW_YUp9eDRuEVIL5WqsfXIRjhVjyLbulLoEfgS69_icnuBJw"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      },
      {
        "id": "0c0c7eba-2776-4247-a3c8-8cfd1de1b7fb",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "dfd08599-0806-46df-88e1-3a27602798b7"
          ],
          "secret": [
            "vDw_bVTRcWNcr-m0elNdZA"
          ],
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "59b20f04-5cc8-4fb0-a7bb-480039f46fae",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ebce4f25-e1e0-4bb4-a63f-0d3f4140f512",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b200873a-525c-410f-9a8f-29e1b4b2c406",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "db520367-b9f2-4d02-bbcc-ae98bd998725",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9b97a760-c448-45a4-8f8e-352939d12afe",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "dd3c1533-c97d-415c-a24e-951bd34f1ac5",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3ceeb4a7-2f5b-435f-bf70-21414c09c927",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "bfb09b7b-4f31-4ee5-bbea-ee4e18e6d251",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ccce7ada-f42a-4f1e-8202-42db452d77c8",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "749825be-0fb6-47fd-9551-af30302fc559",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c7f0ed3f-6c3e-4039-862b-db63a004e35b",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4660e784-5c0f-47e4-a218-bbf650c8a1b1",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "42930732-21eb-461f-93e9-498ce40e8ae2",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9326698a-a15d-428f-a0d5-d7e3ab66dcf8",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c69ec8da-aa04-4f40-b5f6-bb01b15aa4c3",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3f71d484-c74e-49e0-a321-c60fa14305f3",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "09e4577b-817d-4883-b926-4e9617935bfb",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4b71f3c6-fcf1-4ab9-b887-bbd78cb0f80a",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0c8d9891-c780-48f5-8461-d9e366e1aca7",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a9fdf7eb-d537-47e9-8d17-6bfb718e6495",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "911e43a4-5e6e-4e49-9806-5c9d1acc7b6c",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "05fc0659-a634-420e-9dda-33b034180dee",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5"
  },
  "keycloakVersion": "19.0.2",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}