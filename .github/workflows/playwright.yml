name: Playwright Tests
on:
  workflow_call:
    inputs:
      NODE_VERSION:
        required: true
        type: string
      PNPM_VERSION:
        required: true
        type: string
      TAG:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      NODE_VERSION:
        description: Nodejs version used to run tests
        required: true
        type: string
        default: 22.14.0
      PNPM_VERSION:
        description: Pnpm version used to run tests
        required: true
        type: string
        default: 10.5.2
      TAG:
        required: true
        type: string
        default: latest
jobs:
  test:
    timeout-minutes: 60

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "${{ inputs.NODE_VERSION }}"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        id: pnpm-install
        with:
          version: "${{ inputs.PNPM_VERSION }}"
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-store
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache Node.js files
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.STORE_PATH }}
          key: node-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            node-${{ runner.os }}-${{ runner.arch }}-

      - name: Install Node.js dependencies
        run: pnpm install --frozen-lockfile

      - name: Get used Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(pnpm --dir playwright exec playwright -V | awk '{ print $2 }')" >> $GITHUB_ENV

      - name: Restore cache - Playwright browser binaries
        uses: actions/cache/restore@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install Playwright system dependencies
        run: pnpm --dir playwright exec playwright install --with-deps

      - name: Save cache - Playwright browser binaries
        if: always() && steps.playwright-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: Initialize application environment for tests
        run: |
          ./ci/scripts/init-env.sh
          docker pull ghcr.io/cloud-pi-native/console/server:${{ inputs.TAG }}
          docker tag ghcr.io/cloud-pi-native/console/server:${{ inputs.TAG }} dso-console/server:prod
          docker pull ghcr.io/cloud-pi-native/console/client:${{ inputs.TAG }}
          docker tag ghcr.io/cloud-pi-native/console/client:${{ inputs.TAG }} dso-console/client:prod
          docker compose -f ./docker/docker-compose.prod.yml up --no-build -d --remove-orphans

      - name: Run Playwright tests
        run: pnpm --dir playwright exec playwright test

      - name: Clean up docker resources (containers, volumes)
        run: docker compose -f ./docker/docker-compose.prod.yml down -v --remove-orphans

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright/playwright-report/
          retention-days: 30
