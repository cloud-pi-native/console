name: Tests - e2e

on:
  workflow_call:
    inputs:
      NODE_VERSION:
        required: true
        type: string
      PNPM_VERSION:
        required: true
        type: string
      TAG:
        required: true
        type: string
      BROWSERS:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      NODE_VERSION:
        description: Nodejs version used to run tests
        required: true
        type: string
        default: 22.14.0
      PNPM_VERSION:
        description: Pnpm version used to run tests
        required: true
        type: string
        default: 9.15.4
      TAG:
        description: Image tag used to run tests
        required: true
        type: string
        default: latest
      BROWSERS:
        description: Comma separeted browser list to run tests on (Options are 'electron', 'chrome', 'edge', 'firefox')
        required: false
        type: string
        default: electron

jobs:
  matrix:
    name: Generate browsers matrix
    runs-on: ubuntu-latest
    outputs:
      browsers: ${{ steps.build-matrix.outputs.BROWSERS }}
    steps:
      - name: Generate matrix
        id: build-matrix
        run: |
          BROWSERS=$(echo "\"${{ inputs.BROWSERS }}\"" | jq -c 'split(",")')
          echo "BROWSERS=$BROWSERS" >> $GITHUB_OUTPUT

  e2e-tests:
    name: End to end tests
    runs-on: ubuntu-latest
    needs:
      - matrix
    strategy:
      matrix:
        browsers: ${{ fromJson(needs.matrix.outputs.browsers) }}
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        id: pnpm-install
        with:
          version: "${{ inputs.PNPM_VERSION }}"
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "${{ inputs.NODE_VERSION }}"

      - name: Setup firefox
        uses: browser-actions/setup-firefox@v1
        if: ${{ matrix.browsers == 'firefox' }}

      - name: Setup chrome
        uses: browser-actions/setup-chrome@v1
        if: ${{ matrix.browsers == 'chrome' }}

      - name: Setup edge
        uses: browser-actions/setup-edge@v1
        if: ${{ matrix.browsers == 'edge' }}

      - name: Get pnpm store directory
        id: pnpm-store
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache node files
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.pnpm-store.outputs.STORE_PATH }}
            /home/runner/.cache/Cypress
          key: node-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            node-${{ runner.os }}-${{ runner.arch }}-

      - name: Get turbo cache directories
        id: turbo-cache
        run: |
          TURBO_CACHE_PATHS=""
          for pkg in $(find ./apps ./packages ./plugins -type d -mindepth 1 -maxdepth 1 -not -path "**/node_modules"); do
            if [ -z "$TURBO_CACHE_PATHS" ]; then
          TURBO_CACHE_PATHS="$pkg/dist
          $pkg/types"
            else
          TURBO_CACHE_PATHS="$TURBO_CACHE_PATHS
          $pkg/dist
          $pkg/types"
            fi
          done
          echo "TURBO_CACHE_PATHS<<EOF" >> $GITHUB_OUTPUT
          echo "$TURBO_CACHE_PATHS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Cache turbo files
        uses: actions/cache@v4
        with:
          path: |
            ./.turbo/cache
            ${{ steps.turbo-cache.outputs.TURBO_CACHE_PATHS }}
          key: turbo-e2e-${{ runner.os }}-${{ runner.arch }}-${{ matrix.browsers }}-${{ hashFiles('apps/**/src/**','apps/client/cypress/**','packages/**/src/**','plugins/**/src/**') }}
          restore-keys: |
            turbo-e2e-${{ runner.os }}-${{ runner.arch }}-${{ matrix.browsers }}-
            turbo-e2e-${{ runner.os }}-${{ runner.arch }}-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run e2e tests
        run: |
          ./ci/scripts/init-env.sh
          ./ci/scripts/run-tests.sh -e -t "${{ inputs.TAG }}" -b "${{ matrix.browsers }}"

      - name: Give permissions to upload logs
        if: ${{ failure() }}
        run: |
          mkdir ./logs
          sudo find /var/lib/docker/containers/ -name "*.log" -exec cp "{}" ./logs  \;
          sudo chmod 777 -R ./logs

      - name: Upload cypress artifacts and logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: cypress-report-e2e
          path: |
            ./apps/client/cypress/e2e/screenshots/
            ./logs/
          retention-days: 14
