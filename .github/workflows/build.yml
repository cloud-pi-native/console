name: Build and push last version

on:
  workflow_dispatch:

env:
  REGISTRY: "ghcr.io"
  NAMESPACE: "${{ github.repository }}"
  PLATFORM: "linux/amd64,linux/arm64"
  TAG: "${{ github.sha }}"

jobs:
  matrix:
    name: Generate matrix for build & scan
    runs-on: ubuntu-latest
    outputs:
      build-matrix: ${{ steps.build-matrix.outputs.BUILD_MATRIX }}
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v3
      - name: Generate matrix for build
        id: build-matrix
        run: |
          echo 'BUILD_MATRIX<<EOF' >> $GITHUB_OUTPUT
          ./ci/scripts/build-matrix.sh -f ./docker/docker-compose.prod.yml -c -p "${{ env.PLATFORM }}" -r "${{ env.REGISTRY }}" -t "${{ env.TAG }}" -n "${{ env.NAMESPACE }}" | jq '[.[] | select(.build != false)]' >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

  build:
    name: Build application
    runs-on: ubuntu-latest
    needs:
      - matrix
    strategy:
      matrix:
        images: ${{ fromJSON(needs.matrix.outputs.build-matrix) }}
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v3
      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v2
      - name: Set up QEMU (for multi platform build)
        uses: docker/setup-qemu-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true
      - name: Build docker image
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.images.build.context }}
          file: ${{ matrix.images.build.dockerfile }}
          tags: ${{ matrix.images.build.tags }}
          target: ${{ matrix.images.build.target }}
          platforms: ${{ matrix.images.build.platforms }}
          push: true
