name: Build

on:
  workflow_call:
    inputs:
      REGISTRY:
        required: true
        type: string
      NAMESPACE:
        required: true
        type: string
      PLATFORM:
        required: true
        type: string
      TAG:
        required: true
        type: string
    outputs:
      matrix:
        description: "Images matrix used by piepline"
        value: ${{ jobs.matrix.outputs.build-matrix }}
  workflow_dispatch:
    inputs:
      REGISTRY:
        description: Target registry to push images
        required: true
        type: string
        default: ghcr.io
      NAMESPACE:
        description: Target namespace to the given registry
        required: true
        type: string
        default: cloud-pi-native/console
      PLATFORM:
        description: Target platforms to build images
        required: true
        type: string
        default: linux/amd64

env:
  TAG: ${{ inputs.TAG || github.sha }}

jobs:
  matrix:
    name: Generate matrix for build & scan
    runs-on: ubuntu-latest
    outputs:
      build-matrix: ${{ steps.build-matrix.outputs.BUILD_MATRIX }}
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v3

      - name: Generate matrix for build
        id: build-matrix
        run: |
          echo 'BUILD_MATRIX<<EOF' >> $GITHUB_OUTPUT
          ./ci/scripts/build-matrix.sh -f ./docker/docker-compose.prod.yml -c -a -p "${{ inputs.PLATFORM }}" -r "${{ inputs.REGISTRY }}" -t "${{ env.TAG }}" -n "${{ inputs.NAMESPACE }}" | jq '[.[] | select(.build != false)]' >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

  build:
    name: Build application
    runs-on: ubuntu-latest
    needs:
      - matrix
    strategy:
      matrix:
        images: ${{ fromJSON(needs.matrix.outputs.build-matrix) }}
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v3

      - name: Get first tag
        id: split
        run: echo "APP_VERSION=${TAG%*,}" >> $GITHUB_OUTPUT

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU (for multi platform build)
        uses: docker/setup-qemu-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true

      - name: Build and push docker image
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.images.build.context }}
          file: ${{ matrix.images.build.dockerfile }}
          tags: ${{ matrix.images.build.tags }}
          target: ${{ matrix.images.build.target }}
          platforms: ${{ matrix.images.build.platforms }}
          push: true
          build-args: |
            APP_VERSION=${{ steps.split.outputs.APP_VERSION }}
