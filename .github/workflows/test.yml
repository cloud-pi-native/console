name: Test application

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
    branches:
      - "**"
  workflow_dispatch:

env:
  NODE_VERSION: "18.14.1"

jobs:
  lint:
    name: Run linter
    if: ${{ !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "${{ env.NODE_VERSION }}"
          check-latest: true
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: |
            ${{ env.STORE_PATH }}
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Check lint error
        run: pnpm run lint

  unit-tests:
    name: Run unit test suite
    runs-on: ubuntu-latest
    needs:
      - lint
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "${{ env.NODE_VERSION }}"
          check-latest: true
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: |
            ${{ env.STORE_PATH }}
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run unit tests
        run: |
          ./ci/scripts/init-env.sh
          ./ci/scripts/run-tests.sh -u
      - name: Upload vitest coverage artifacts
        uses: actions/upload-artifact@v3
        with:
          name: unit-tests-coverage
          path: |
            ./apps/client/coverage
            ./apps/server/coverage
            ./apps/ansible-api/coverage
            ./packages/shared/coverage
          retention-days: 1

  code-scan:
    name: Run code quality analysis
    runs-on: ubuntu-latest
    needs:
      - unit-tests
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: unit-tests-coverage
          path: ./coverage
      - name: Scan code
        run: |
          docker run \
            --rm \
            -e SONAR_HOST_URL=${{ secrets.SONAR_HOST_URL }} \
            -e SONAR_LOGIN=${{ secrets.SONAR_TOKEN }} \
            -v $PWD/:/usr/src \
            sonarsource/sonar-scanner-cli sonar-scanner \
              -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
              -Dsonar.branch.name=${{ github.event.pull_request.head.ref }} \
              -Dsonar.qualitygate.wait=true \
              -Dsonar.projectBaseDir=/usr/src \
              -Dsonar.sources=apps/client,apps/server,apps/ansible-api,packages/shared \
              -Dsonar.javascript.lcov.reportPaths=coverage/apps/client/coverage/lcov.info,coverage/apps/server/coverage/lcov.info,coverage/apps/ansible-api/coverage/lcov.info,coverage/packages/shared/coverage/lcov.info \
              -Dsonar.coverage.exclusions=**/*.spec.js,**/*.vue,apps/client/src/router/**,apps/client/src/stores/**,**/assets/**,apps/client/src/main.js,apps/client/src/icons.js,apps/client/cypress/**,packages/shared/src/schemas/**
        continue-on-error: true

  component-tests:
    name: Run component test suite
    runs-on: ubuntu-latest
    needs:
      - code-scan
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v3
      - name: Run component tests
        run: |
          ./ci/scripts/init-env.sh
          ./ci/scripts/run-tests.sh -c
      - name: Upload cypress artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: cypress-report
          path: ./apps/client/cypress/components/screenshots/
          retention-days: 14

  e2e-tests:
    name: Run e2e test suite
    runs-on: ubuntu-latest
    needs:
      - component-tests
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v3
      - name: Run e2e tests
        run: |
          ./ci/scripts/init-env.sh
          ./ci/scripts/run-tests.sh -e
      - name: Upload cypress artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: cypress-report
          path: ./apps/client/cypress/e2e/screenshots/
          retention-days: 14
